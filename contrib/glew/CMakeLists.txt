PROJECT(glew C)
SET(GLEW_NAME "glew")

INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/glew/include)

SET(HEADER_LIST
    include/GL/glew.h
    include/GL/glxew.h
    include/GL/wglew.h
)

SET(SOURCE_LIST
    src/glew.c
)

SOURCE_GROUP(${GLEW_NAME} FILES ${HEADER_LIST})
SOURCE_GROUP(${GLEW_NAME} FILES ${SOURCE_LIST})

IF(BUILD_OPENGL_ES2 OR BUILD_OPENGL_ES3)
    ADD_DEFINITIONS(-DGLEW_BUILD)
    ADD_LIBRARY(${GLEW_NAME} SHARED ${HEADER_LIST} ${SOURCE_LIST})
ELSE()
    ADD_DEFINITIONS(-DGLEW_STATIC)
    ADD_LIBRARY(${GLEW_NAME} STATIC ${HEADER_LIST} ${SOURCE_LIST})
ENDIF()

IF(BUILD_PLATFORM_APPLE)
    FIND_LIBRARY(AGL_FRAMEWORK AGL)
    FIND_LIBRARY(OPENGL_FRAMEWORK OpenGL)
    TARGET_LINK_LIBRARIES(${GLEW_NAME} PRIVATE ${AGL_FRAMEWORK})
    TARGET_LINK_LIBRARIES(${GLEW_NAME} PRIVATE ${OPENGL_FRAMEWORK})
ELSEIF(BUILD_PLATFORM_WINDOWS)
    TARGET_LINK_LIBRARIES(${GLEW_NAME} PRIVATE glu32)
    TARGET_LINK_LIBRARIES(${GLEW_NAME} PRIVATE opengl32)
ELSE()
    FIND_PACKAGE(OpenGL REQUIRED)
    TARGET_LINK_LIBRARIES(${GLEW_NAME} PRIVATE ${OPENGL_LIBRARIES})
ENDIF()