SET(LIB_NAME editor)
SET(LIB_OUTNAME octoon-${LIB_NAME})

SET(HEADER_PATH ${OCTOON_PATH_HEADER}/${LIB_NAME})
SET(SOURCE_PATH ${OCTOON_PATH_TOOLS}/${LIB_OUTNAME})

SET(PLATFORM_LIST
    ${SOURCE_PATH}/main.cpp
    ${HEADER_PATH}/mainwindow.h
    ${SOURCE_PATH}/mainwindow.cpp
    ${HEADER_PATH}/widgets/OViewWidget.h
    ${SOURCE_PATH}/widgets/OViewWidget.cpp
)
SOURCE_GROUP(${LIB_NAME} FILES ${PLATFORM_LIST})

set(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
set_property(SOURCE qrc_qml.cpp qrc_qss.cpp PROPERTY SKIP_AUTOMOC ON)
set(CMAKE_AUTOMOC ON)

# add resources
set(Qt5_DIR ${QT_INCLUDE_PATH}/Qt5)
find_package(Qt5 COMPONENTS Quick Core Network Widgets QuickWidgets)
qt5_add_resources(RESOURCES qml.qrc qss.qrc)

ADD_EXECUTABLE(${LIB_OUTNAME} ${PLATFORM_LIST})

TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PUBLIC Qt5::Core PUBLIC Qt5::Widgets PUBLIC Qt5::QuickWidgets)

# copy resources
file(COPY ${OCTOON_PATH}/lib/${LIB_NAME}/resource DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH})
file(COPY ${SOURCE_PATH}/qml DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH})
file(COPY ${SOURCE_PATH}/qss DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH})

file(COPY ${OCTOON_PATH}/lib/${LIB_NAME}/resource DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH_DEBUG})
file(COPY ${SOURCE_PATH}/qml DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH_DEBUG})
file(COPY ${SOURCE_PATH}/qss DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH_DEBUG})

file(COPY ${OCTOON_PATH}/lib/${LIB_NAME}/resource DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH_RELEASE})
file(COPY ${SOURCE_PATH}/qml DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH_RELEASE})
file(COPY ${SOURCE_PATH}/qss DESTINATION ${OCTOON_LIBRARY_OUTPUT_PATH_RELEASE})

TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon-c)

SET_TARGET_ATTRIBUTE(${LIB_OUTNAME} "tools")