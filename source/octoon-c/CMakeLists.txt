SET(LIB_NAME octoon-c)

SET(HEADER_PATH ${OCTOON_PATH_HEADER})
SET(SOURCE_PATH ${OCTOON_PATH_SOURCE}/${LIB_NAME})

SET(PLATFORM_LIST
    ${HEADER_PATH}/octoon.h
    ${HEADER_PATH}/octoon_main.h
    ${SOURCE_PATH}/octoon_pc.cpp
    ${SOURCE_PATH}/octoon_ndk.cpp
    ${SOURCE_PATH}/octoon_jni.cpp
)
SOURCE_GROUP(${LIB_NAME} FILES ${PLATFORM_LIST})

IF(OCTOON_BUILD_PLATFORM_WINDOWS)
    ADD_DEFINITIONS(-DGLFW_EXPOSE_NATIVE_WGL)
    ADD_DEFINITIONS(-DGLFW_EXPOSE_NATIVE_WIN32)
ELSEIF(OCTOON_BUILD_PLATFORM_LINUX)
    ADD_DEFINITIONS(-DGLFW_EXPOSE_NATIVE_GLX)
    ADD_DEFINITIONS(-DGLFW_EXPOSE_NATIVE_X11)
ELSEIF(OCTOON_BUILD_PLATFORM_APPLE)
    ADD_DEFINITIONS(-DGLFW_EXPOSE_NATIVE_NSGL)
    ADD_DEFINITIONS(-DGLFW_EXPOSE_NATIVE_COCOA)
ELSEIF(OCTOON_BUILD_PLATFORM_ANDROID)
    ADD_DEFINITIONS(-DGLFW_EXPOSE_NATIVE_EGL)
ENDIF()

ADD_DEFINITIONS(-DOCTOON_MAIN_HANDLED)
ADD_DEFINITIONS(-DOCTOON_BUILD_DLL_EXPORT)

ADD_LIBRARY(${LIB_NAME} STATIC ${PLATFORM_LIST})

TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE glfw)
TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE octoon)
TARGET_LINK_LIBRARIES(${LIB_NAME} PRIVATE octoon-runtime)

SET_TARGET_ATTRIBUTE(${LIB_NAME} "octoon")